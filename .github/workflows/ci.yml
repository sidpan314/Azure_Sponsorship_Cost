name: Azure Sponsorship Costs Report

on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:

jobs:
  build-docker-image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Build Docker Image
        run: docker build -t canalyzer:latest .

      - name: Cache Docker Image
        uses: actions/cache@v2
        with:
          path: docker-image.tar
          key: ${{ runner.os }}-docker-image-${{ hashFiles('**/Dockerfile') }}
      - name: Save Docker Image
        run: |
          docker save canalyzer:latest -o docker-image.tar

  scheduled_report:
    needs: build-docker-image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Load Docker Image from Cache
        uses: actions/cache@v2
        with:
          path: docker-image.tar
          key: ${{ runner.os }}-docker-image-${{ hashFiles('**/Dockerfile') }}
      - name: Load Docker Image
        run: |
          docker load -i docker-image.tar

      - name: Run Steps in Container
        env:
          CLIENT_ID: ${{ secrets.CLIENT_ID }}
          CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
          TENANT_ID: ${{ secrets.TENANT_ID }}
          SUBSCRIPTION_ID: ${{ secrets.SUBSCRIPTION_ID }}
        run: |
          docker run --rm \
            -v /home/runner/work/Azure_Sponsorship_Cost/Azure_Sponsorship_Cost:/app \
            -w /app \
            canalyzer:latest \
            /bin/bash -c "\
            echo '{\"clientId\": \"'${CLIENT_ID}'\", \"clientSecret\": \"'${CLIENT_SECRET}'\", \"subscriptionId\": \"'${SUBSCRIPTION_ID}'\", \"tenantId\": \"'${TENANT_ID}'\"}' > temp.json && \
            apt-get update && apt-get install -y jq && \
            jq -s '.[0] * .[1]' appsettings.json temp.json > temp2.json && \
            mv temp2.json appsettings.json && \
            canalyzer -o report -f markdown && \
            markdown_to_html report.md  --css styles.css --with-summary --premailer -o html_report && \
            wkhtmltopdf html_report.html report.pdf && \
            canalyzer_smtp html_report_summary.html report.md -a report.pdf \
            "
